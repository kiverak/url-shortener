services:
  url-shortener:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: url-shortener
    ports:
      - "8083:8083"
    depends_on:
      mongo:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=mongodb://admin:secret@mongo:27017/myNewDb?authSource=admin&replicaSet=rs0
      - SERVER_PORT=8083
    networks:
      - mongo-network

  mongo:
    image: mongo:8.0.12-rc0-noble
    container_name: mongodb
    restart: unless-stopped
    command: ["--replSet", "rs0", "--bind_ip_all", "--keyFile", "/data/mongo-keyfile"]
    healthcheck:
      test: |
        mongosh --eval "try { rs.status().ok } catch (e) { rs.initiate({_id:'rs0',members:[{_id:0,host:\"mongo:27017\"}]}).ok }" --quiet --host mongo:27017
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 20s # Give mongo time to start before healthcheck runs the first rs.initiate()
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=secret
      - MONGO_INITDB_DATABASE=myNewDb
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - ./mongo-keyfile:/data/mongo-keyfile
    networks:
      - mongo-network

volumes:
  mongo_data:

networks:
  mongo-network:
    driver: bridge